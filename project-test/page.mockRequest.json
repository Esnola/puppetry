{
  "title": "Chained Target",
  "timeout": 50000,
  "snippets": false,
  "description": "",
  "savedAt": 1582119796,
  "loadedAt": 1620748358,
  "modified": false,
  "filename": "page.mockRequest.json",
  "targets": {
    "ms3k3sh0itg": {
      "target": "MAKE_POST_REQUEST_LINK",
      "id": "ms3k3sh0itg",
      "editing": false,
      "selector": "#makePostRequest",
      "key": "ms3k3sh0itg"
    }
  },
  "groups": {
    "k2vk2vvd4pi": {
      "title": "page.mockRequest",
      "id": "k2vk2vvd4pi",
      "editing": false,
      "key": "k2vk2vvd4pi",
      "tests": {
        "icvk3ybg3xw": {
          "editing": false,
          "id": "icvk3ybg3xw",
          "key": "icvk3ybg3xw",
          "title": "POST intercepted but does not match the assertion",
          "commands": {
            "icvk3ybg4av": {
              "editing": false,
              "id": "icvk3ybg4av",
              "key": "icvk3ybg4av",
              "target": "page",
              "method": "goto",
              "assert": {},
              "params": {
                "url": "http://127.0.0.1:8080/",
                "timeout": 30000,
                "waitUntil": "load"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "icvk3ybg3xw",
              "waitForTarget": false
            },
            "icvk3ybg4gf": {
              "editing": false,
              "id": "icvk3ybg4gf",
              "key": "icvk3ybg4gf",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "statusCode": "202 Accepted",
                "contentType": "text/plain",
                "body": "Lorem ipsum",
                "headers": ""
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "icvk3ybg3xw",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "icvk3ybg4lm": {
              "editing": false,
              "id": "icvk3ybg4lm",
              "key": "icvk3ybg4lm",
              "target": "MAKE_POST_REQUEST_LINK",
              "method": "click",
              "assert": {},
              "params": {
                "button": "left",
                "clickCount": 1,
                "delay": 0
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "icvk3ybg3xw",
              "waitForTarget": false
            },
            "icvk3ybg4r0": {
              "editing": false,
              "id": "icvk3ybg4r0",
              "key": "icvk3ybg4r0",
              "target": "page",
              "method": "assertResponse",
              "assert": {
                "assertion": "response",
                "not": "false",
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "textOperator": "any",
                "jpOperator": "any",
                "status": "200"
              },
              "params": {
                "waitFor": true
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "icvk3ybg3xw",
              "waitForTarget": false,
              "comment": "@assert [page.assertResponse] expected any HTTP/S responses matching POST *http://127.0.0.1:8080* with response like status code 200, but found none"
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "p4jk414zo1z": {
          "editing": false,
          "id": "p4jk414zo1z",
          "key": "p4jk414zo1z",
          "title": "POST interceptedand matches the assertion by body path",
          "commands": {
            "p4jk414zog0": {
              "editing": false,
              "id": "p4jk414zog0",
              "key": "p4jk414zog0",
              "target": "page",
              "method": "goto",
              "assert": {},
              "params": {
                "url": "http://127.0.0.1:8080/",
                "timeout": 30000,
                "waitUntil": "load"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "p4jk414zo1z",
              "waitForTarget": false
            },
            "p4jk414zorc": {
              "editing": false,
              "id": "p4jk414zorc",
              "key": "p4jk414zorc",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "statusCode": "200 OK",
                "contentType": "text/plain",
                "body": "",
                "bodyPath": "./fixtures/mocked-response-body.json",
                "headers": ""
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "p4jk414zo1z",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "p4jk414zp2f": {
              "editing": false,
              "id": "p4jk414zp2f",
              "key": "p4jk414zp2f",
              "target": "MAKE_POST_REQUEST_LINK",
              "method": "click",
              "assert": {},
              "params": {
                "button": "left",
                "clickCount": 1,
                "delay": 0
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "p4jk414zo1z",
              "waitForTarget": false
            },
            "p4jk414zpc4": {
              "editing": false,
              "id": "p4jk414zpc4",
              "key": "p4jk414zpc4",
              "target": "page",
              "method": "assertResponse",
              "assert": {
                "assertion": "response",
                "not": "false",
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "textOperator": "any",
                "jpOperator": "matches",
                "jpExp": "$.store.book[0].author",
                "jpVal": "Nigel Rees",
                "status": ""
              },
              "params": {
                "waitFor": true
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "p4jk414zo1z",
              "waitForTarget": false,
              "comment": ""
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "7vnk2vvpx9i": {
          "editing": false,
          "id": "7vnk2vvpx9i",
          "key": "7vnk2vvpx9i",
          "title": "POST intercepted  and matches the assertion",
          "commands": {
            "ms3k3sjajbz": {
              "editing": false,
              "id": "ms3k3sjajbz",
              "key": "ms3k3sjajbz",
              "target": "page",
              "method": "goto",
              "params": {
                "url": "http://127.0.0.1:8080/",
                "timeout": 30000,
                "waitUntil": "load"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "7vnk2vvpx9i",
              "waitForTarget": false
            },
            "7vnk2vvpxmd": {
              "editing": false,
              "id": "7vnk2vvpxmd",
              "key": "7vnk2vvpxmd",
              "target": "page",
              "method": "mockRequest",
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "7vnk2vvpx9i",
              "waitForTarget": false,
              "entity": "command",
              "params": {
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "statusCode": "202 Accepted",
                "contentType": "text/plain",
                "body": "Lorem ipsum",
                "headers": ""
              },
              "comment": ""
            },
            "ms3k3sjauko": {
              "editing": false,
              "id": "ms3k3sjauko",
              "key": "ms3k3sjauko",
              "target": "MAKE_POST_REQUEST_LINK",
              "method": "click",
              "params": {
                "button": "left",
                "clickCount": 1,
                "delay": 0
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "7vnk2vvpx9i",
              "waitForTarget": false
            },
            "1thk3snata1": {
              "editing": false,
              "id": "1thk3snata1",
              "key": "1thk3snata1",
              "target": "page",
              "method": "assertResponse",
              "assert": {
                "assertion": "response",
                "not": "false",
                "url": "http://127.0.0.1:8080",
                "method": "POST",
                "textOperator": "any",
                "jpOperator": "any",
                "status": "202"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "7vnk2vvpx9i",
              "waitForTarget": false,
              "params": {
                "waitFor": true
              }
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "nhqk3rcutp5": {
          "editing": false,
          "id": "nhqk3rcutp5",
          "key": "nhqk3rcutp5",
          "title": "GET intercepted and matches assertion",
          "commands": {
            "nhqk3rcuu31": {
              "editing": false,
              "id": "nhqk3rcuu31",
              "key": "nhqk3rcuu31",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET",
                "statusCode": "200 OK",
                "contentType": "application/json",
                "body": "{ status: 1 }",
                "headers": ""
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "nhqk3rcutp5",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "nhqk3rcuu9v": {
              "editing": false,
              "id": "nhqk3rcuu9v",
              "key": "nhqk3rcuu9v",
              "target": "page",
              "method": "assertRest",
              "assert": {
                "assertion": "rest",
                "statusOperator": "equals",
                "statusValue": 200,
                "textOperator": "contains",
                "textValue": "status: 1",
                "headerOperator": "any"
              },
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "nhqk3rcutp5",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "dp4k3ocf2mu": {
          "editing": false,
          "id": "dp4k3ocf2mu",
          "key": "dp4k3ocf2mu",
          "title": "GET intercepted but does not match assertion",
          "commands": {
            "dp4k3ocf2y1": {
              "editing": false,
              "id": "dp4k3ocf2y1",
              "key": "dp4k3ocf2y1",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET",
                "statusCode": "200 OK",
                "contentType": "application/javascript",
                "body": "OK",
                "headers": ""
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "dp4k3ocf2mu",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "dp4k3ocf35b": {
              "editing": false,
              "id": "dp4k3ocf35b",
              "key": "dp4k3ocf35b",
              "target": "page",
              "method": "assertRest",
              "assert": {
                "assertion": "rest",
                "statusOperator": "equals",
                "statusValue": 200,
                "textOperator": "equals",
                "textValue": "FAIL",
                "jpOperator": "any",
                "headerOperator": "any"
              },
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "dp4k3ocf2mu",
              "waitForTarget": false,
              "entity": "command",
              "comment": "@assert [page.assertRest] expected HTTP/S response matching http://127.0.0.1:8080/status/404 with data to be \"FAIL\", but received data \"OK\""
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "dp4k3ocfa3h": {
          "editing": false,
          "id": "dp4k3ocfa3h",
          "key": "dp4k3ocfa3h",
          "title": "Get intercepted and headers modified",
          "commands": {
            "dp4k3ocfaas": {
              "editing": false,
              "id": "dp4k3ocfaas",
              "key": "dp4k3ocfaas",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET",
                "statusCode": "200 OK",
                "contentType": "application/javascript",
                "body": "OK",
                "headers": "X-Access-Token: SECRET\nX-User-Agent: CUSTOM"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "dp4k3ocfa3h",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "dp4k3ocfagm": {
              "editing": false,
              "id": "dp4k3ocfagm",
              "key": "dp4k3ocfagm",
              "target": "page",
              "method": "assertRest",
              "assert": {
                "assertion": "rest",
                "statusOperator": "equals",
                "statusValue": 200,
                "textOperator": "any",
                "headerOperator": "specific",
                "headerName": "X-Access-Token",
                "headerValue": "SECRET"
              },
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "dp4k3ocfa3h",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        },
        "effk3od60ew": {
          "editing": false,
          "id": "effk3od60ew",
          "key": "effk3od60ew",
          "title": "Get intercepted and headers modified yet does not match assertion",
          "commands": {
            "effk3od60pf": {
              "editing": false,
              "id": "effk3od60pf",
              "key": "effk3od60pf",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET",
                "statusCode": 200,
                "contentType": "application/javascript",
                "body": "OK",
                "headers": "X-Access-Token: SECRET\nX-User-Agent: CUSTOM"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "effk3od60ew",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "effk3od60w6": {
              "editing": false,
              "id": "effk3od60w6",
              "key": "effk3od60w6",
              "target": "page",
              "method": "assertRest",
              "assert": {
                "assertion": "rest",
                "statusOperator": "equals",
                "statusValue": 200,
                "textOperator": "any",
                "jpOperator": "any",
                "headerOperator": "specific",
                "headerName": "X-Access-Token",
                "headerValue": "SOMETHING ELSE"
              },
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "effk3od60ew",
              "waitForTarget": false,
              "entity": "command",
              "comment": "@assert [page.assertRest] expected HTTP/S response matching http://127.0.0.1:8080/status/404 to have header X-Access-Token: SOMETHING ELSE, but it does not"
            },
            "effk3od79af": {
              "editing": false,
              "id": "effk3od79af",
              "key": "effk3od79af",
              "target": "page",
              "method": "mockRequest",
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET",
                "statusCode": 200,
                "contentType": "application/javascript",
                "body": "OK",
                "headers": "X-Access-Token: SECRET\nX-User-Agent: CUSTOM"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "effk3od60ew",
              "waitForTarget": false,
              "entity": "command",
              "comment": ""
            },
            "effk3od79k9": {
              "editing": false,
              "id": "effk3od79k9",
              "key": "effk3od79k9",
              "target": "page",
              "method": "assertRest",
              "assert": {
                "assertion": "rest",
                "statusOperator": "equals",
                "statusValue": 200,
                "textOperator": "any",
                "jpOperator": "any",
                "headerOperator": "specific",
                "headerName": "SOMETHING ELSE",
                "headerValue": "SOMETHING ELSE"
              },
              "params": {
                "url": "http://127.0.0.1:8080/status/404",
                "method": "GET"
              },
              "disabled": false,
              "failure": "",
              "variables": {},
              "expanded": false,
              "refName": "",
              "ref": "",
              "isRef": false,
              "groupId": "k2vk2vvd4pi",
              "testId": "effk3od60ew",
              "waitForTarget": false,
              "entity": "command",
              "comment": "@assert [page.assertRest] expected HTTP/S response matching http://127.0.0.1:8080/status/404 to have header SOMETHING ELSE: SOMETHING ELSE, but it does not"
            }
          },
          "disabled": false,
          "expanded": false,
          "adding": false,
          "groupId": "k2vk2vvd4pi",
          "entity": "test",
          "failure": ""
        }
      }
    }
  },
  "puppetry": "3.2.5"
}